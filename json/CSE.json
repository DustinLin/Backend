{
    "CSE 3": {
        "prerequisites": [],
        "name": "Fluency in Information Technology",
        "description": "Introduces the concepts and skills necessary to effectively use information technology. Includes basic concepts and some practical skills with computer and networks. "
    },
    "CSE 4GS": {
        "prerequisites": [
            "MATH 10A",
            "or",
            "MATH 20A"
        ],
        "name": "Mathematical Beauty in Rome",
        "description": "Exploration of topics in mathematics and engineering\n\t\t\t\t  as they relate to classical architecture in Rome, Italy. In\n\t\t\t\t  depth geometrical\n\t\t\t\t  analysis and computer modeling of basic structures (arches,\n\t\t\t\t  vaults, domes),\n\t\t\t\t  and on-site studies of the Colosseum, Pantheon, Roman Forum,\n\t\t\t\t  and St. Peter\u2019s Basilica. "
    },
    "CSE 6GS": {
        "prerequisites": [
            "MATH 10A",
            "or",
            "MATH 20A"
        ],
        "name": "Mathematical Beauty in Rome Lab",
        "description": "Companion course to CSE 4GS where theory is applied and lab experiments\n\t\t\t\t  are carried out \u201cin the field\u201d in Rome, Italy. For final projects,\n\t\t\t\t  students will select a complex structure (e.g., the Colosseum, the\n\t\t\t\t  Pantheon, St. Peter\u2019s, etc.) to analyze and model, in detail, using computer-based\n\t\t\t\t  tools. "
    },
    "CSE 5A": {
        "prerequisites": [],
        "name": "Introduction to Programming I",
        "description": "Introduction to algorithms and top-down problem solving. Introduction to the C language, including functions, arrays, and standard libraries. Basic skills for using a PC graphical user interface operating system environment. File maintenance utilities are covered. A student may not receive credit for CSE 5A after receiving credit for CSE 11 or CSE 8B. Recommended preparation: A familiarity with high school-level algebra is expected, but this course assumes no prior programming knowledge. "
    },
    "CSE 8A": {
        "prerequisites": [],
        "name": "Introduction to Computer Science: Java I",
        "description": "Introductory course for students interested in computer science. Fundamental concepts of applied computer science using media computation. Exercises in the theory and practice of computer science. Hands-on experience with designing, editing, compiling, and executing programming constructs and applications. CSE 8A is part of a two-course sequence (CSE 8A and CSE 8B) that is equivalent to CSE 11. Students should take CSE 8B to complete this track. Formerly offered as corequisite courses CSE 8A plus 8AL. Students who have taken CSE 8B or CSE 11 may not take CSE 8A. Recommended preparation: No prior programming experience is assumed, but comfort using computers is helpful. Students should consult the \u201cCSE Course Placement Advice\u201d web page for assistance in choosing which CSE course to take first. "
    },
    "CSE 8B": {
        "prerequisites": [
            "CSE 8A"
        ],
        "name": "Introduction to Computer Science: Java II",
        "description": "Continuation of the Java language. Continuation of programming techniques. More on inheritance. Exception handling. CSE 8B is part of a two-course sequence (CSE 8A and CSE 8B) that is equivalent to CSE 11. Students should consult the \u201cCSE Course Placement Advice\u201d web page for assistance in choosing which CSE course to take first. Students may not receive credit for CSE 8B and CSE 11. "
    },
    "CSE 11": {
        "prerequisites": [],
        "name": "Introduction to Computer Science and Object-Oriented Programming: Java",
        "description": "An accelerated introduction to computer science and programming using the Java language. Basic UNIX. Modularity and abstraction. Documentation, testing and verification techniques. Basic object-oriented programming, including inheritance and dynamic binding. Exception handling. Event-driven programming. Experience with AWT library or another similar library. Students who have completed CSE 8B may not take CSE 11. Students should\u00a0consult the \u201cCSE Course Placement Advice\u201d web page for assistance in choosing which CSE course to take first. Recommended preparation: high school algebra and familiarity with computing concepts and a course in a compiled language. "
    },
    "CSE 12": {
        "prerequisites": [
            "CSE 8B",
            "or",
            "CSE 11",
            "and",
            "CSE 15L"
        ],
        "name": "Basic Data\n\t\t  Structures and Object-Oriented Design",
        "description": "Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections. "
    },
    "CSE 15L": {
        "prerequisites": [
            "CSE 8B",
            "or",
            "CSE 11",
            "and",
            "CSE 12"
        ],
        "name": "Software Tools and Techniques Laboratory",
        "description": "Hands-on exploration of software development\n\t\t\t\t  tools and techniques. Investigation of the scientific process\n\t\t\t\t  as applied to software development and debugging. Emphasis is on weekly\n\t\t\t\t  hands-on laboratory experiences, development of laboratory notebooking\n\t\t\t\t  techniques as applied to software design. "
    },
    "CSE 20": {
        "prerequisites": [
            "COGS 7",
            "or",
            "CSE 8B",
            "or",
            "CSE 11"
        ],
        "name": "Discrete Mathematics",
        "description": "Basic discrete mathematical structures: sets, relations, functions, sequences, equivalence relations, partial orders, and number systems. Methods of reasoning and proofs: prepositional logic, predicate logic, induction, recursion, and pigeonhole principle. Infinite sets and diagonalization. Basic counting techniques; permutation and combinations. Applications will be given to digital logic design, elementary number theory, design of programs, and proofs of program correctness. Students who have completed MATH 109 may not receive credit for CSE 20. Credit not offered for both MATH 15A and CSE 20. Equivalent to MATH 15A. "
    },
    "CSE 21": {
        "prerequisites": [
            "CSE 20",
            "or",
            "MATH 15A"
        ],
        "name": "Mathematics for Algorithms and Systems",
        "description": "This course will provide an introduction to the discrete mathematical tools needed to analyze algorithms and systems. Enumerative combinatorics: basic counting principles, inclusion-exclusion, and generating functions. Matrix notation. Applied discrete probability. Finite automata.  "
    },
    "CSE 30": {
        "prerequisites": [
            "CSE 12",
            "and",
            "CSE 15L"
        ],
        "name": "Computer\n\t\t  Organization and Systems Programming",
        "description": "Introduction to organization of modern digital\n\t\t\t\t  computers\u2014understanding the various components of a computer\n\t\t\t\t  and their interrelationships. Study of a specific architecture/machine\n\t\t\t\t  with emphasis on systems programming in C and Assembly languages in a UNIX\n\t\t\t\t  environment. "
    },
    "CSE 42": {
        "prerequisites": [],
        "name": "Building and Programming Electronic Devices",
        "description": "This course allows students to use what they learned in introductory programming courses to make things happen in the real world. Working in teams, students will first learn to program Arduino-based devices. Teams of students will design a custom device and program it to do their bidding. This course is targeted to freshmen and sophomores in engineering and science disciplines who want to practice applying what they have learned in a programming class and to have the chance to program things other than computers. Program or materials fees may apply. "
    },
    "CSE 80": {
        "prerequisites": [
            "CSE 8B",
            "or",
            "CSE 11"
        ],
        "name": "UNIX Lab",
        "description": "The objective of the course is to help the programmer create a productive UNIX environment. Topics include customizing the shell, file system, shell programming, process management, and UNIX tools. "
    },
    "CSE 86": {
        "prerequisites": [
            "CSE 12"
        ],
        "name": "C++ for Java Programmers",
        "description": "Helps the Java programmer to be productive in the C++ programming environment. Topics include the similarities and differences between Java and C++ with special attention to pointers, operator overloading, templates, the STL, the preprocessor, and the C++ Runtime Environment. "
    },
    "CSE 87": {
        "prerequisites": [],
        "name": "Freshman Seminar",
        "description": "The Freshman Seminar Program is designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small seminar setting. Freshman Seminars are offered in all campus departments and undergraduate colleges, and topics vary from quarter to quarter. Enrollment is limited to fifteen to twenty students, with preference given to entering freshmen. "
    },
    "CSE 91": {
        "prerequisites": [],
        "name": "Perspectives\n\t\t  in Computer Science and Engineering",
        "description": "A seminar format discussion led by CSE faculty on topics in central areas of computer science, concentrating on the relation among them, recent developments, and future directions. "
    },
    "CSE 99": {
        "prerequisites": [],
        "name": "Independent\n\t\t  Study in Computer Science and Engineering",
        "description": "Independent reading or research by special arrangement with a faculty member. "
    },
    "CSE 100": {
        "prerequisites": [
            "CSE 12",
            "and",
            "CSE 15L",
            "and",
            "CSE 21",
            "or",
            "MATH 154",
            "or",
            "MATH 184A",
            "and",
            "CSE 5A",
            "or",
            "CSE 30",
            "or",
            "ECE 15",
            "or",
            "MAE 9"
        ],
        "name": "Advanced Data Structures",
        "description": "High-performance data structures and supporting algorithms. Use and implementation of data structures like (un)balanced trees, graphs, priority queues, and hash tables. Also, memory management, pointers, recursion. Theoretical and practical performance analysis, both average case and amortized. Uses C++ and STL. Credit not offered for both MATH 176 and CSE 100. Equivalent to MATH 176. Recommended preparation: background in C or C++ programming. "
    },
    "CSE 101": {
        "prerequisites": [
            "CSE 100",
            "or",
            "MATH 176"
        ],
        "name": "Design and Analysis of Algorithms",
        "description": "Design and analysis of efficient algorithms with emphasis of nonnumerical algorithms such as sorting, searching, pattern matching, and graph and network algorithms. Measuring complexity of algorithms, time and storage. NP-complete problems. "
    },
    "CSE 103": {
        "prerequisites": [
            "MATH 20A-B",
            "and",
            "MATH 184A",
            "or",
            "CSE 21",
            "or",
            "MATH 154"
        ],
        "name": "A Practical\n\t\t  Introduction to Probability and Statistics",
        "description": "Distributions over the real line. Independence, expectation, conditional expectation, mean, variance. Hypothesis testing. Learning classifiers. Distributions over R^n, covariance matrix. Binomial, Poisson distributions. Chernoff bound. Entropy. Compression. Arithmetic coding. Maximal likelihood estimation. Bayesian estimation. CSE 103 is not duplicate credit for ECE 109, ECON 120A, or MATH 183. "
    },
    "CSE 105": {
        "prerequisites": [
            "CSE 12",
            "and",
            "CSE 15L",
            "and",
            "MATH 15A",
            "or",
            "MATH 109",
            "or",
            "CSE 20",
            "and",
            "MATH 184",
            "or",
            "CSE 21",
            "or",
            "MATH 100A",
            "or",
            "MATH 103A"
        ],
        "name": "Theory of Computability",
        "description": "An introduction to the mathematical theory of computability. Formal languages. Finite automata and regular expression. Push-down automata and context-free languages. Computable or recursive functions: Turing machines, the halting problem. Undecidability. Credit not offered for both MATH 166 and CSE 105. Equivalent to MATH 166. "
    },
    "CSE 106": {
        "prerequisites": [
            "MATH 18",
            "or",
            "MATH 31AH",
            "and",
            "MATH 20C",
            "or",
            "MATH 31BH",
            "and",
            "CSE 21",
            "or",
            "DSC 40B",
            "or",
            "MATH 154",
            "or",
            "MATH 184A"
        ],
        "name": "Discrete and Continuous Optimization",
        "description": "One frequently deals with problems in engineering, data science, business, economics, and other disciplines for which algorithmic solutions that optimize a given quantity under constraints are desired. This course is an introduction to the models, theory, methods, and applications of discrete and continuous optimization. Topics include shortest paths, flows, linear, integer, and convex programming, and continuous optimization techniques such as steepest descent and Lagrange multipliers. "
    },
    "CSE 107": {
        "prerequisites": [
            "CSE 21",
            "or",
            "MATH 154",
            "and",
            "CSE 101",
            "and",
            "CSE 105"
        ],
        "name": "Introduction to Modern Cryptography",
        "description": "Topics include private and public-key cryptography, block ciphers, data encryption, authentication, key distribution and certification, pseudorandom number generators, design and analysis of protocols, zero-knowledge proofs, and advanced protocols. Emphasizes rigorous mathematical approach including formal definitions of security goals and proofs of protocol security. "
    },
    "CSE 110": {
        "prerequisites": [
            "CSE 100"
        ],
        "name": "Software\n\t\t\t\t  Engineering",
        "description": "Introduction to software development and engineering methods,\n                  including specification, design, implementation, testing, and\n                  process. An emphasis on team development, agile methods, and\n                  use of tools such as IDE\u2019s, version control, and test harnesses.                  "
    },
    "CSE 112": {
        "prerequisites": [
            "CSE 110"
        ],
        "name": "Advanced Software Engineering",
        "description": "This course will cover software engineering\n\t\t\t\t  topics associated with large systems development such as requirements\n\t\t\t\t  and specifications, testing and maintenance, and design. Specific\n\t\t\t\t  attention will be given to development tools and automated\n\t\t\t\t  support environments. "
    },
    "CSE 113": {
        "prerequisites": [
            "CSE 12",
            "and",
            "CSE 21"
        ],
        "name": "Errors, Defects, and Failures",
        "description": "Errors, resulting in defects and ultimately system failure, occur in engineering and also other areas such as medical care. The ways in which failures occur, and the means for their prevention, mitigation, and management, will be studied. Emphasis will be on software systems but also include the study of practice of other areas. "
    },
    "CSE 118": {
        "prerequisites": [
            "CSE 131",
            "CSE 132B",
            "COGS 102C",
            "COGS 121",
            "COGS 184",
            "ECE 111",
            "ECE 118",
            "ECE 191",
            "ECE 192"
        ],
        "name": "Ubiquitous Computing",
        "description": "Explores emerging opportunities enabled by cheap sensors and networked computing devices. Small research projects will be conducted in teams, culminating in project presentations at the end of the term. Section will cover material relevant to the project, such as research methods, software engineering, teamwork, and project management. "
    },
    "CSE 120": {
        "prerequisites": [
            "CSE 30",
            "and",
            "CSE 101",
            "and",
            "CSE 110"
        ],
        "name": "Principles\n\t\t  of Computer Operating Systems",
        "description": "Basic functions of operating systems; basic kernel structure, concurrency, memory management, virtual memory, file systems, process scheduling, security and protection. "
    },
    "CSE 123": {
        "prerequisites": [
            "CSE 30",
            "and",
            "CSE 101",
            "and",
            "CSE 110"
        ],
        "name": "Computer Networks",
        "description": "Introduction to concepts, principles, and practice of computer communication networks with examples from existing architectures, protocols, and standards with special emphasis on the internet protocols. Layering and the OSI model; physical and data link layers; local and wide area networks; datagrams and virtual circuits; routing and congestion control; internetworking. Transport protocols. Credit may not be received for both CSE 123 and ECE 158A. "
    },
    "CSE 124": {
        "prerequisites": [
            "CSE 30",
            "and",
            "CSE 101",
            "and",
            "CSE 110"
        ],
        "name": "Networked Services",
        "description": "(Renumbered from CSE 123B.) The architecture of modern networked services, including data center design, enterprise storage, fault tolerance, and load balancing. Protocol software structuring, the Transmission Control Protocol (TCP), remote procedure calls, protocols for digital audio and video communication, overlay and peer-to-peer systems, secure communication. Credit may not be received for both CSE 124 and ECE 158B. Students may not receive credit for both CSE 123B and CSE 124. "
    },
    "CSE 125": {
        "prerequisites": [],
        "name": "Software\n\t\t  System Design and Implementation",
        "description": "Design and implementation of large, complex software systems involving multiple aspects of CSE curriculum. Emphasis is on software system design applied to a single, large group project with close interaction with instructor. "
    },
    "CSE 127": {
        "prerequisites": [
            "MATH 154",
            "or",
            "MATH 184A",
            "and",
            "or",
            "CSE 123",
            "or",
            "CSE 124"
        ],
        "name": "Introduction to Computer Security",
        "description": "Topics include basic cryptography, security/threat analysis, access control, auditing, security models, distributed systems security, and theory behind common attack and defense techniques. The class will go over formal models as well as the bits and bytes of security exploits. "
    },
    "CSE 130": {
        "prerequisites": [
            "CSE 12",
            "and",
            "or",
            "MATH 176",
            "and",
            "or",
            "MATH 166"
        ],
        "name": "Programming\n\t\t  Languages: Principles and Paradigms",
        "description": "(Formerly CSE 173.) Introduction to programming languages and paradigms, the components that comprise them, and the principles of language design, all through the analysis and comparison of a variety of languages (e.g., Pascal, Ada, C++, PROLOG, ML.) Will involve programming in most languages studied. "
    },
    "CSE 131": {
        "prerequisites": [
            "CSE 100",
            "and",
            "CSE 105",
            "and",
            "CSE 130"
        ],
        "name": "Compiler Construction",
        "description": "(Formerly CSE 131B.) Introduction to the compilation of programming languages,\n\t\t\t\t  practice of lexical and syntactic analysis, symbol tables,\n\t\t\t\t  syntax-directed translation, type checking, code generation, optimization,\n\t\t\t\t  interpretation, and compiler structure. (Students may receive repeat credit\n\t\t\t\t  for CSE 131A and CSE 131B by completing CSE 131.) "
    },
    "CSE 132A": {
        "prerequisites": [
            "CSE 100"
        ],
        "name": "Database System Principles",
        "description": "Basic concepts of databases, including data modeling, relational databases, query languages, optimization, dependencies, schema design, and concurrency control. Exposure to one or several commercial database systems. Advanced topics such as deductive and object-oriented databases, time allowing. "
    },
    "CSE 132B": {
        "prerequisites": [
            "CSE 132A"
        ],
        "name": "Database Systems Applications",
        "description": "Design of databases, transactions, use of trigger facilities and datablades. Performance measuring, organization of index structures. "
    },
    "CSE 134B": {
        "prerequisites": [
            "CSE 100"
        ],
        "name": "Web Client Languages",
        "description": "Design and implementation of interactive World Wide Web clients using helper applications and plug-ins.\u00a0The main language covered will be Java. "
    },
    "CSE 135": {
        "prerequisites": [
            "CSE 100",
            "or",
            "MATH 176"
        ],
        "name": "Online Database Analytics Applications ",
        "description": "Database, data warehouse, and data cube design; SQL programming and querying with emphasis on analytics; online analytics applications, visualizations, and data exploration; performance tuning. "
    },
    "CSE 136": {
        "prerequisites": [
            "CSE 135"
        ],
        "name": "Enterprise-Class Web Applications",
        "description": "Design and implementation of very large-scale, web-based applications. Topics covered typically include modeling organizational needs, design and revision management, J2EE or similar software platforms, web server and application server functionality, reuse of object-oriented components, model-view-controller and other design patterns, clustering, load-balancing, fault-tolerance, authentication, and usage accounting. "
    },
    "CSE 140": {
        "prerequisites": [
            "MATH 15A",
            "or",
            "MATH 109",
            "and",
            "CSE 30"
        ],
        "name": "Components\n\t\t  and Design Techniques for Digital Systems",
        "description": "Design of Boolean logic and finite state machines; two-level, multilevel combinational logic design, combinational modules and modular networks, Mealy and Moore machines, analysis and synthesis of canonical forms, sequential modules. "
    },
    "CSE 140L": {
        "prerequisites": [
            "MATH 15A",
            "or",
            "MATH 109",
            "and",
            "CSE 30"
        ],
        "name": "Digital Systems Laboratory",
        "description": "Implementation with computer-aided design tools for combinational logic minimization and state machine synthesis. Hardware construction of a small digital system. "
    },
    "CSE 141": {
        "prerequisites": [
            "CSE 30",
            "and",
            "CSE 140",
            "and",
            "CSE 140L"
        ],
        "name": "Introduction to Computer Architecture",
        "description": "Introduction to computer architecture. Computer system design. Processor design. Control design. Memory systems. "
    },
    "CSE 141L": {
        "prerequisites": [
            "CSE 30",
            "and",
            "CSE 140",
            "and",
            "CSE 140L"
        ],
        "name": "Project in Computer Architecture",
        "description": "Hands-on computer architecture project aiming to familiarize students with instruction set architecture, and design of process. Control and memory systems. "
    },
    "CSE 143": {
        "prerequisites": [
            "CSE 140",
            "or",
            "CSE 170A",
            "or",
            "ECE 81"
        ],
        "name": "Microelectronic System Design",
        "description": "VLSI process technologies; circuit characterization; logic design styles; clocking strategies; computer-aided design tools; subsystem design; design case studies. System design project from hardware description, logic synthesis, physical layout to design verification.  "
    },
    "CSE 145": {
        "prerequisites": [],
        "name": "Embedded System Design Project",
        "description": "Project class building an embedded computing system. Learn fundamental knowledge of microcontrollers, sensors, and actuators. Introduction to the hardware and software tools to build project in a team environment and end-to-end system building. "
    },
    "CSE 148": {
        "prerequisites": [
            "CSE 141",
            "and",
            "CSE 141L"
        ],
        "name": "Advanced\n\t\t  Processor Architecture Design Project",
        "description": "Students will use hardware description language tools to add advanced architectural features to a basic processor design. These features may include pipelining, superscalar execution, branch prediction, and advanced cache features. Designs will be implemented in programmable logic devices. "
    },
    "CSE 150A": {
        "prerequisites": [
            "DSC 40B",
            "and",
            "or",
            "DSC 80",
            "and",
            "or",
            "ECE 109",
            "or",
            "ECON 120A",
            "or",
            "MATH 183",
            "and",
            "MATH 20A",
            "and",
            "or",
            "MATH 31AH"
        ],
        "name": "Introduction to Artificial Intelligence: Probabilistic Reasoning and Decision-Making",
        "description": "Introduction to probabilistic models at the heart of modern artificial intelligence. Specific topics to be covered include probabilistic methods for reasoning and decision-making under uncertainty; inference and learning in Bayesian networks; prediction and planning in Markov decision processes; applications to intelligent systems, speech and natural language processing, information retrieval, and robotics. "
    },
    "CSE 150B": {
        "prerequisites": [
            "DSC 40B",
            "and",
            "or",
            "DSC 80",
            "and",
            "or",
            "ECE 109",
            "or",
            "ECON 120A",
            "or",
            "MATH 183",
            "and",
            "CSE 100"
        ],
        "name": "Introduction to Artificial Intelligence: Search and Reasoning",
        "description": "The course will introduce important ideas and algorithms in search and reasoning and demonstrate how they are used in practical AI applications. Topics include A* search, adversarial search, Monte Carlo tree search, reinforcement learning, constraint solving and optimization, propositional and first-order reasoning. "
    },
    "CSE 151A": {
        "prerequisites": [
            "DSC 40B",
            "and",
            "or",
            "DSC 80",
            "and",
            "or",
            "MATH 181A",
            "or",
            "ECE 109",
            "or",
            "MATH 183",
            "or",
            "ECON 120A",
            "and",
            "or",
            "MATH 31AH"
        ],
        "name": "Introduction to Machine Learning",
        "description": "Broad introduction to machine learning. The topics include some topics in supervised learning, such as k-nearest neighbor classifiers, decision trees, boosting, and perceptrons; and topics in unsupervised learning, such as k-means and hierarchical clustering. In addition to the actual algorithms, the course focuses on the principles behind the algorithms. Students may not receive credit for both CSE 151A and COGS 188, nor may they receive credit for both CSE 151A and CSE 151. "
    },
    "CSE 151B": {
        "prerequisites": [
            "MATH 20C",
            "and",
            "or",
            "ECE 109",
            "or",
            "CSE 103",
            "or",
            "MATH 181A",
            "or",
            "MATH 183"
        ],
        "name": "Deep Learning",
        "description": "(Formerly CSE 154.) This course covers the fundamentals of neural networks. We introduce linear regression, logistic regression, perceptrons, multilayer networks and back-propagation, convolutional neural networks, recurrent networks, and deep networks trained by reinforcement learning. Students may receive credit for one of the following: CSE 151B, CSE 154, or COGS 181. "
    },
    "CSE 152": {
        "prerequisites": [
            "MATH 18",
            "or",
            "MATH 20F",
            "or",
            "MATH 31AH",
            "and",
            "CSE 100",
            "or",
            "DSC 40B",
            "or",
            "MATH 176",
            "and",
            "CSE 101",
            "or",
            "DSC 80",
            "or",
            "MATH 188"
        ],
        "name": "Introduction to Computer Vision",
        "description": "The goal of computer vision is to compute scene and object properties from images and video. This introductory course includes feature detection, image segmentation, motion estimation, object recognition, and 3-D shape reconstruction through stereo, photometric stereo, and structure from motion. "
    },
    "CSE 152A": {
        "prerequisites": [
            "MATH 31AH",
            "and",
            "or",
            "DSC 30",
            "and",
            "or",
            "DSC 80"
        ],
        "name": "Introduction to Computer Vision I",
        "description": "This course provides a broad introduction to the foundations, algorithms, and applications of computer vision. It introduces classical models and contemporary methods, from image formation models to deep learning, to address problems of 3-D reconstruction and object recognition from images and video. Topics include filtering, feature detection, stereo vision, structure from motion, motion estimation, and recognition. Programming assignments will be in Python. Students may not receive credit for both CSE 152A and CSE 152. "
    },
    "CSE 152B": {
        "prerequisites": [
            "CSE 152A",
            "or",
            "CSE 152"
        ],
        "name": "Introduction to Computer Vision II",
        "description": "This course covers advanced topics needed to apply computer vision in industry or follow current research. Example topics include real-time systems for 3D computer vision, machine learning tools such as support-vector machine (SVM) and boosting for image classification, and deep neural networks for object detection and semantic segmentation. "
    },
    "CSE 156": {
        "prerequisites": [
            "MATH 20C",
            "or",
            "MATH 31BH",
            "and",
            "MATH 18",
            "or",
            "MATH 31AH",
            "and",
            "COGS 118A",
            "or",
            "CSE 150",
            "or",
            "CSE 151"
        ],
        "name": "Statistical Natural Language Processing",
        "description": "Natural language processing (NLP) is a field of AI which aims to equip computers with the ability to intelligently process natural (human) language. This course will explore statistical techniques for the automatic analysis of natural language data. Specific topics covered include probabilistic language models, which define probability distributions over text passages; text classification; sequence models; parsing sentences into syntactic representations; and machine translation. "
    },
    "CSE 158": {
        "prerequisites": [
            "DSC 40B",
            "and",
            "or",
            "DSC 80",
            "and",
            "or",
            "ECE 109",
            "or",
            "MATH 181A",
            "or",
            "ECON 120A",
            "or",
            "MATH 183"
        ],
        "name": "Recommender Systems and Web Mining",
        "description": "Current methods for data mining and predictive analytics. Emphasis is on studying real-world data sets, building working systems, and putting current ideas from machine learning research into practice. "
    },
    "CSE 160": {
        "prerequisites": [
            "CSE 100",
            "or",
            "MATH 176"
        ],
        "name": "Introduction to Parallel Computing",
        "description": "Introduction to high performance parallel computing: parallel architecture, algorithms, software, and problem-solving techniques. Areas covered: Flynn\u2019s taxonomy, processor-memory organizations, shared and nonshared memory models: message passing and multithreading, data parallelism; speedup, efficiency and Amdahl\u2019s law, communication and synchronization, isoefficiency and scalability. Assignments given to provide practical experience. "
    },
    "CSE 163": {
        "prerequisites": [
            "CSE 167"
        ],
        "name": "Advanced Computer Graphics",
        "description": "Topics include an overview of many aspects of computer graphics, including the four main computer graphics areas of animation, modeling, rendering, and imaging. Programming projects in image and signal processing, geometric modeling, and real-time rendering. "
    },
    "CSE 164": {
        "prerequisites": [
            "CSE 167"
        ],
        "name": "GPU Programming",
        "description": "Principles and practices of programming graphics processing units (GPUs). GPU architecture and hardware concepts, including memory and threading models. Modern hardware-accelerated graphics pipeline programming. Application of GPU programming to rendering of game graphics, including physical, deferring, and global lighting models. Recommended preparation: Practical Rendering and Computation with Direct3D 11 by Jason Zink, Matt Pettineo, and Jack Hoxley. "
    },
    "CSE 165": {
        "prerequisites": [
            "CSE 167"
        ],
        "name": "3-D User Interaction",
        "description": "This course focuses on design and evaluation of three-dimensional (3-D) user interfaces, devices, and interaction techniques. The course consists of lectures, literature reviews, and programming assignments. Students will be expected to create interaction techniques for several different 3-D interaction devices. Program or materials fees may apply. "
    },
    "CSE 166": {
        "prerequisites": [
            "MATH 18",
            "or",
            "MATH 31AH",
            "or",
            "MATH 20F",
            "and",
            "or",
            "DSC 80",
            "or",
            "MATH 176"
        ],
        "name": "Image Processing",
        "description": "Principles of image formation, analysis, and representation. Image enhancement, restoration, and segmentation; stochastic image models. Filter design, sampling, Fourier and wavelet transforms. Selected applications in computer graphics and machine vision. "
    },
    "CSE 167": {
        "prerequisites": [
            "CSE 100",
            "or",
            "MATH 176"
        ],
        "name": "Computer Graphics",
        "description": "Representation and manipulation of pictorial data. Two-dimensional and three-dimensional transformations, curves, surfaces. Projection, illumination, and shading models. Raster and vector graphic I/O devices; retained-mode and immediate-mode graphics software systems and applications. Students may not receive credit for both MATH 155A and CSE 167. "
    },
    "CSE 168": {
        "prerequisites": [
            "CSE 167"
        ],
        "name": "Computer Graphics II: Rendering",
        "description": "Weekly programming assignments that will cover graphics rendering algorithms. During the course the students will learn about ray tracing, geometry, tessellation, acceleration structures, sampling, filtering, shading models, and advanced topics such as global illumination and programmable graphics hardware. "
    },
    "CSE 169": {
        "prerequisites": [
            "CSE 167"
        ],
        "name": "Computer Animation",
        "description": "Advanced graphics focusing on the programming techniques involved in computer animation. Algorithms and approaches for both character animation and physically based animation. Particular subjects may include skeletons, skinning, key framing, facial animation, inverse kinematics, locomotion, motion capture, video game animation, particle systems, rigid bodies, clothing, and hair. Recommended preparation: An understanding of linear algebra. "
    },
    "CSE 170": {
        "prerequisites": [
            "CSE 11",
            "or",
            "CSE 8B",
            "and",
            "COGS 187A",
            "or",
            "COGS 1",
            "or",
            "DSGN 1"
        ],
        "name": " Interaction Design",
        "description": "Introduces fundamental methods and principles for designing, implementing, and evaluating user interfaces. Topics include user-centered design, rapid prototyping, experimentation, direct manipulation, cognitive principles, visual design, social software, software tools. Learn by doing: Work with a team on a quarter-long design project. Cross-listed with COGS 120. Students may not receive credit for COGS 120 and CSE 170. Recommended preparation: Basic familiarity with HTML. "
    },
    "CSE 176A": {
        "prerequisites": [
            "CSE 110",
            "or",
            "CSE 170",
            "or",
            "COGS 120"
        ],
        "name": "Health Care Robotics",
        "description": "Robotics has the potential to improve well-being for millions of people and support caregivers and to aid the clinical workforce. We bring together engineers, clinicians, and end-users to explore this exciting new field. The course is project-based, interactive, and hands-on, and involves working closely with stakeholders to develop prototypes that solve real-world problems. Students will explore the latest research in health care robotics, human-robot teaming, and health design. Program or materials fees may apply. "
    },
    "CSE 176E": {
        "prerequisites": [],
        "name": "Robot Systems Design and Implementation",
        "description": "End-to-end system design of embedded electronic systems including PCB design and fabrication, software control system development, and system integration. Program or material fee may apply. May be coscheduled with CSE 276E. "
    },
    "CSE 180": {
        "prerequisites": [],
        "name": "Biology Meets Computing",
        "description": "Topics include an overview of various aspects of bioinformatics and will simultaneously introduce students to programming in Python. The assessments in the course represent various programming challenges and include solving diverse biological problems using popular bioinformatics tools. Students may not receive credit for CSE 180 and CSE 180R. "
    },
    "CSE 180R": {
        "prerequisites": [
            "CSE 3",
            "or",
            "CSE 7",
            "or",
            "CSE 8A",
            "or",
            "CSE 8B",
            "or",
            "CSE 11"
        ],
        "name": "Biology Meets Computing",
        "description": "Topics include an overview of various aspects of bioinformatics and will simultaneously introduce students to programming in Python. The assessments in the course represent various programming challenges and include solving diverse biological problems using popular bioinformatics tools. This will be a fully online class based on extensive educational materials and online educational platform Stepik developed with HHMI, NIH, and ILTI support. Students may not receive credit for CSE 180 and CSE 180R. "
    },
    "CSE 181": {
        "prerequisites": [
            "MATH 176",
            "and",
            "and",
            "or",
            "CHEM 114C"
        ],
        "name": "Molecular Sequence Analysis",
        "description": "This course covers the analysis of nucleic acid and protein sequences, with an emphasis on the application of algorithms to biological problems. Topics include sequence alignments, database searching, comparative genomics, and phylogenetic and clustering analyses. Pairwise alignment, multiple alignment, DNS sequencing, scoring functions, fast database search, comparative genomics, clustering, phylogenetic trees, gene finding/DNA statistics. Students may receive credit for one of the following: CSE 181, BIMM 181, or BENG 181. "
    },
    "CSE 182": {
        "prerequisites": [
            "CSE 100",
            "or",
            "MATH 176"
        ],
        "name": "Biological Databases",
        "description": "This course provides an introduction to the features of biological data, how those data are organized efficiently in databases, and how existing data resources can be utilized to solve a variety of biological problems. Object oriented databases, data modeling and description. Survey of current biological database with respect to above, implementation of a database on a biological topic. Cross-listed with BIMM 182 and BENG 182. Students may receive credit for one of the following: CSE 182, BENG 182, or BIMM 182. "
    },
    "CSE 184": {
        "prerequisites": [
            "BENG 181",
            "or",
            "CSE 181",
            "BENG 182",
            "CSE 182",
            "or",
            "CHEM 182"
        ],
        "name": "Computational Molecular Biology",
        "description": "This advanced course covers the application of machine learning and modeling techniques to biological systems. Topics include gene structure, recognition of DNA and protein sequence patterns, classification, and protein structure prediction. Pattern discovery, Hidden Markov models/support victor machines/neural network/profiles. Protein structure prediction, functional characterization or proteins, functional genomics/proteomics, metabolic pathways/gene networks. Cross-listed with BIMM 184/BENG 184/CHEM 184. "
    },
    "CSE 185": {
        "prerequisites": [
            "CSE 11",
            "or",
            "CSE 8B",
            "and",
            "CSE 12",
            "and",
            "MATH 20C",
            "or",
            "MATH 31BH",
            "and",
            "and",
            "CHEM 109"
        ],
        "name": "Advanced Bioinformatics Laboratory",
        "description": "This course emphasizes the hands-on application of bioinformatics to biological problems. Students will gain experience in the application of existing software, as well as in combining approaches to answer specific biological questions. Topics include sequence alignment, fast database search, comparative genomics, expression analysis, computational proteomics, genome-wide association studies, next-generation sequencing, genomics, and big data. Students may not receive credit for CSE 185 and BIMM 185. Restricted to CS27, BI34, BE28, and CH37 major codes. "
    },
    "CSE 190": {
        "prerequisites": [],
        "name": "Topics\n\t\t  in Computer Science and Engineering",
        "description": "Topics of special interest in computer science and engineering. Topics may vary from quarter to quarter. May be repeated for credit with the consent of instructor. "
    },
    "CSE 191": {
        "prerequisites": [],
        "name": "Seminar in CSE",
        "description": "A seminar course on topics of current interest. Students, as well as, the instructor will be actively involved in running the course/class. This course cannot be counted toward a technical elective. "
    },
    "CSE 192": {
        "prerequisites": [],
        "name": "Senior Seminar in Computer Science and Engineering",
        "description": "The Senior Seminar Program is designed to allow senior undergraduates to meet with faculty members in a small group setting to explore an intellectual topic in CSE (at the upper-division level). Topics will vary from quarter to quarter. Senior seminars may be taken for credit up to four times, with a change in topic, and permission of the department. Enrollment is limited to twenty students, with preference given to seniors. (P/NP grades only.) "
    },
    "CSE 193": {
        "prerequisites": [],
        "name": "Introduction to Computer Science Research",
        "description": "Introduction to research in computer science. Topics include defining a CS research problem, finding and reading technical papers, oral communication, technical writing, and independent learning. Course participants apprentice with a CSE research group and propose an original research project. "
    },
    "CSE 195": {
        "prerequisites": [],
        "name": "Teaching",
        "description": "Teaching and tutorial assistance in a CSE course under the supervision of the instructor. (P/NP grades only.) "
    },
    "CSE 197": {
        "prerequisites": [],
        "name": "Field\n\t\t  Study in Computer Science and Engineering",
        "description": "Directed study and research at laboratories away from the campus. (P/NP grades only.) "
    },
    "CSE 198": {
        "prerequisites": [],
        "name": "Directed Group Study",
        "description": "Computer science and engineering topics whose study involves reading and discussion by a small group of students under the supervision of a faculty member. (P/NP grades only.) "
    },
    "CSE 199": {
        "prerequisites": [],
        "name": "Independent Study for Undergraduates",
        "description": "Independent reading or research by special arrangement with a faculty member. (P/NP grades only.) "
    },
    "CSE 199H": {
        "prerequisites": [
            "CSE department"
        ],
        "name": "CSE Honors Thesis Research for Undergraduates",
        "description": "Undergraduate research for completing an honors project under the supervision of a CSE faculty member. May be taken across multiple quarters. Students should enroll for a letter grade. May be taken for credit three times. "
    }
}